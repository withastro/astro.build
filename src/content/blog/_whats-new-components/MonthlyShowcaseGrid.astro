---
import { type CollectionEntry, getCollection } from 'astro:content';
import { AstroError } from 'astro/errors';
import ShowcaseCard from '~/pages/showcase/_components/ShowcaseCard.astro';

interface Props {
	startDate: `${number}-${number}-${number}`;
	endDate: `${number}-${number}-${number}`;
	starlight?: boolean;
	exclude?: Array<CollectionEntry<'showcase'>['id']>;
}

if (!Astro.props.startDate) {
	throw new AstroError('Missing prop `startDate` in `<MonthlyShowcaseGrid />`');
}
if (!Astro.props.endDate) {
	throw new AstroError('Missing prop `endDate` in `<MonthlyShowcaseGrid />`');
}

const startDate = new Date(Astro.props.startDate);
const endDate = new Date(Astro.props.endDate);

// Get the showcase sites for the date range specified.
const sites = (
	await getCollection(
		'showcase',
		({ data, id }) =>
			data.dateAdded >= startDate &&
			data.dateAdded <= endDate &&
			// Include/exclude Starlight sites depending on prop value.
			(Astro.props.starlight
				? data.categories.includes('starlight')
				: !data.categories.includes('starlight')) &&
			// Exclude any IDs explicitly specified with the exclude prop.
			!(Astro.props.exclude || []).includes(id),
	)
)
	// Sort by date added ascending, then alphabetically by title ascending.
	.sort((a, b) =>
		a.data.dateAdded > b.data.dateAdded
			? 1
			: a.data.dateAdded < b.data.dateAdded
				? -1
				: a.data.title > b.data.title
					? 1
					: -1,
	);
---

{
	sites.length > 0 ? (
		<ul class="grid gap-5 !p-0 md:grid-flow-row-dense md:grid-cols-2 lg:-mx-16 lg:!mb-16 lg:!mt-8 lg:grid-cols-3 xl:-mx-32 [&_a]:!text-white">
			{sites.map((site) => (
				<li class="before:!hidden">
					<ShowcaseCard {site} />
				</li>
			))}
		</ul>
	) : (
		<p class="bg-red-500/10 border border-red-500 p-4">
			No {Astro.props.starlight ? 'Starlight ' : ''}sites found between{' '}
			{startDate.toLocaleDateString()} and {endDate.toLocaleDateString()}.
		</p>
	)
}
