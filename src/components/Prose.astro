---
import type { HTMLAttributes } from "astro/types"

export type Props = HTMLAttributes<"article">

const { class: className, ...attrs } = Astro.props
---

<article
	class:list={["body w-full mx-auto max-w-[85ch] text-astro-gray-200", className]}
	{...attrs}
>
	<slot />
</article>

<style>
	article :global(> * + *),
	article :global(blockquote > * + *) {
		@apply my-4 md:my-6;
	}

	article :global(h1, h2, h3, h4) {
		@apply text-astro-gray-100;
	}

	article :global(h2) {
		@apply heading-4 md:heading-3;
	}

	article :global(h3) {
		@apply heading-5 md:heading-4;
	}

	article :global(h4) {
		@apply heading-5;
	}

	article :global(:where(h1, h2, h3, h4):not(:first-child)) {
		@apply pt-8;
	}

	article :global(:where(h1, h2, h3, h4):not(:last-child)) {
		@apply pb-1;
	}

	article :global(hr) {
		@apply my-12 border-astro-gray-400;
	}

	article :global(p) {
		@apply leading-prose text-astro-gray-200;
	}

	article :global(strong) {
		@apply font-medium;
	}

	article :global(a:not([class])) {
		@apply inline-block font-medium text-astro-pink-light underline;
	}

	article :global(a code) {
		@apply px-1 underline;
	}

	article :global(code) {
		@apply mx-0.5 inline-block rounded-lg bg-astro-gray-500 px-2 align-baseline text-sm leading-6 text-astro-gray-100;
	}

	article :global(pre) {
		@apply my-6 rounded-md border border-astro-gray-400 px-5 py-3 text-sm;
	}

	article :global(pre code) {
		@apply rounded-none bg-inherit p-0 text-inherit;
	}

	article :global(blockquote) {
		@apply space-y-2 border-l-4 border-astro-gray-400 bg-astro-gray-600 p-6 italic md:space-y-4;
	}

	article :global(ul, ol) {
		@apply pl-6 md:pl-8;
	}

	article :global(ol) {
		@apply list-decimal;
	}

	article :global(ul) {
		@apply list-disc;
	}

	article :global(li > :where(ul, ol)) {
		@apply mt-2;
	}

	article :global(li + li) {
		@apply mt-2;
	}

	article :global(:is(img, video):not([class])) {
		@apply mx-auto my-10 w-full max-w-full rounded-lg border border-astro-gray-500;
	}

	article :global(video + aside) {
		@apply -my-6 px-3 italic;
	}

	article :global(a :is(img, video):not([class])) {
		@apply my-0 border-none;
	}

	article :global(iframe) {
		@apply max-w-full;
	}
</style>
