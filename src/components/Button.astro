---

type ButtonBaseProps = {
    theme?: 'primary' | 'secondary' | 'hollow'
    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
}

type ButtonProps = astroHTML.JSX.ButtonHTMLAttributes & ButtonBaseProps

type LinkProps = astroHTML.JSX.AnchorHTMLAttributes &
    ButtonBaseProps & { href: string }

export type Props = ButtonProps | LinkProps

const { theme = 'primary', size = 'md', class: classProp = '', ...props } = Astro.props
const className = ['btn', `btn--${size}`, `btn--${theme}`, classProp]
---

{
    'href' in props ? (
        <a {...props} class:list={className}>
            <slot />
        </a>
    ) : (
        <button {...props} class:list={className}>
            <slot />
        </button>
    )
}

<style>
    .btn {
        @apply inline-flex items-center border border-transparent font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors duration-150 ease-out;
    }

    .btn:not(.btn--hollow) {
        @apply shadow-sm;
    }

    .btn--primary {
        @apply text-neutral-50 bg-primary-600 hover:bg-primary-700;
    }

    .btn--secondary {
        @apply text-primary-700 bg-primary-100 hover:bg-primary-200;
    }

    .btn--hollow {
        @apply text-primary-900 bg-transparent hover:bg-primary-50 hover:underline;
    }

    .btn--xs {
        @apply px-2.5 py-1.5 text-xs rounded;
    }

    .btn--sm {
        @apply px-3 py-2 text-sm leading-4 rounded-md;
    }

    .btn--md {
        @apply px-4 py-2 text-sm rounded-md;
    }

    .btn--lg {
        @apply px-4 py-2 text-base rounded-md;
    }

    .btn--xl {
        @apply px-6 py-3 text-base rounded-md;
    }
</style>
