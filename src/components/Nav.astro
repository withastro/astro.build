---
import { Sprite } from 'astro-icon';
import Drawer from './Drawer.astro';
import MobileMenu from './MobileMenu.astro';
import FlyoutMenu from './FlyoutMenu.astro';
import { globalNavigation, NavigationGroup, NavigationItem, social } from '../config.js';

const { invert = false, marginBottom = false } = Astro.props;

function isNavigationGroup(value: NavigationItem | NavigationGroup): value is NavigationGroup {
    return 'items' in value;
}
---

<nav aria-label="Primary" id="nav" class={`main ${invert ? 'dark' : ''} ${marginBottom ? 'margin-bottom' : ''}`.trim()} style={`--offset: 2.5;`}>
    <ul class="container astro-container">
        <li class="logo">
            <a href="/" id="navlogo">
                <span class="sr-only visually-hidden">Astro</span>
                <Sprite class="logomark" name="logo" size="3em" aria-hidden="true" />
                <Sprite class="wordmark" name="wordmark" height="3.5em" width="6em" aria-hidden="true" />
            </a>
        </li>

        {globalNavigation.map((item, i) => (
            isNavigationGroup(item) ? (
                <li class="flyout">
                    <FlyoutMenu {invert} {...item} />
                </li>
            ) : (
                <li>
                    <a class="subtle" href={item.href}>{item.title}</a>
                </li>
            )
        ))}

        {social.map(item => (
            <li class="icon">
                <a class="subtle" href={item.href} title={item.title}>
                    <Sprite name={item.icon} size="1.5em" aria-hidden="true" />
                </a>
            </li>
        ))}

        <noscript>
            {globalNavigation.map((item, i) => (
                isNavigationGroup(item) ? (
                    <li class="flyout">
                        <FlyoutMenu {invert} {...item} align={i === 0 ? "center" : "right"} />
                    </li>
                ) : (
                    <li>
                        <a href={item.href}>{item.title}</a>
                    </li>
                )
            ))}
        </noscript>

        <button type="button" id="menubtn">
            <span class="sr-only visually-hidden">Open navigation menu</span>
            <Sprite pack="heroicons-outline" name="menu" size={24} />
        </button>
    </ul>
</nav>

<Drawer id="menudrawer">
    <MobileMenu />
</Drawer>

<script>
    import "../scripts/nav.js";

    const menuBtn = document.getElementById('menubtn');
    
    menuBtn.addEventListener('click', (event) => {
        event.stopPropagation();
        window.dispatchEvent(new CustomEvent('drawer:open', { detail: 'menudrawer' }));
    });
</script>

<style>
nav {
    --offset-height: calc(var(--offset) * 1rem);
    width: 100%;
    position: sticky;
    top: calc((var(--offset-height) * -1) - 1px);
    margin-top: -2rem;
    padding: 0.5rem 0;
    background: linear-gradient(0deg, rgba(var(--color-tan-rgb), 0.7), rgba(var(--color-tan-rgb), 1));
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    z-index: 2;
}
nav.margin-bottom {
    margin-bottom: -4.5rem;
}
nav.dark {
    background: transparent;
    color: var(--color-white);
    -webkit-backdrop-filter: none;
    backdrop-filter: none;
}
nav.dark a, nav.dark a:visited {
    color: var(--color-white);
}

nav::before {
    content: '';
    display: block;
    width: 100%;
    height: var(--offset-height);
    z-index: -2;
}
nav.dark::before {
    margin-top: -0.5rem;
}

nav::after {
    position: absolute;
    content: '';
    top: var(--offset-height);
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    box-shadow: var(--shadow-md);
    opacity: 0;
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: cubic-bezier(0.23, 1, 0.320, 1);
    z-index: -1;
}

nav[stuck]::after {
    opacity: 0.5;
    transition-duration: 600ms;
}

ul {
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.33rem;
    padding: 0 0.5rem;
}
li {
    color: var(--color-dusk);
    font-family: var(--font-display);
    font-weight: 400;
    font-size: var(--size-500);
}
nav.dark li {
    color: var(--color-white);
}
[aria-current="page"] {
    font-weight: 700;
}
.logo {
    font-size: 1rem;
    margin-right: auto;
}
.logo a {
    display: flex;
    align-items: center;
    color: var(--color-midnight);
}
.logo a:hover,
.logo a:focus {
    color: var(--color-midnight);
}
.logo a:active {
    color: var(--color-midnight);
}
.logo :global(svg) {
    transform: scale(0.8);
}
.logomark {
    color: inherit;
}
nav.dark .logo :global(svg) {
    color: var(--color-white);
    fill: var(--color-white);
}
.wordmark {
    display: none;
    color: inherit;
    margin-top: -0.5rem;
}
.hidden-mobile {
  display: none;
}
button, a[href="#menudrawer"] {
    background: transparent;
    border: none;
    height: 3rem;
    width: 3rem;
}

button {
    display: none;
    align-items: center;
    justify-content: center;
}

nav :global(noscript) {
    display: flex;
}

@media (max-width: 640px) {
    :global(.js) button {
        display: flex;
    }

    li:not(.logo) {
        display: none;
    }

    :global(noscript) li:not(.logo) {
        display: initial;
    }
}

@media (min-width: 641px) {
    nav :global(noscript) {
        display: none !important;
    }
}

@media (min-width: 52rem) {
    nav {
        /* height: calc(2px + 4.5rem); */
    }
    .logo :global(svg) {
        transform: scale(1);
    }
    .wordmark {
        display: block;
    }
    .hidden-mobile {
      display: block;
    }
}
nav a {
    display: flex;
    height: 100%;
    text-decoration: none;
    transition: all 200ms cubic-bezier(0.165, 0.84, 0.44, 1);
    transition-property: transform, color;
    padding: 0 0.6rem;
}
nav a, nav a:visited {
    color: var(--color-midnight);
}
nav .flyout {
    padding: 0 0.5rem;
}

li.icon {
    margin-left: 1rem;
}
li.icon + li.icon {
    margin-left: 0rem;
}
li.icon a {
    padding: 0.25rem;
}
li.icon a :global(svg) {
    transform: scale(0.9);
}

li.icon a:focus :global(svg),
li.icon a:hover :global(svg) {
    transform: scale(1);
}

[astro-icon="logo"] {
    margin-right: 0.25em;
    transform: translateY(0.5em);
}
</style>