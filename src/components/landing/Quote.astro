---
import Section from './Section.astro';
const { pad = 1, background, blobs = true, color } = Astro.props;
---

<Section class="quote" background={background} pad={pad} style={color ? `--color: ${color};` : ''}>
    {blobs && <div class="glow" />}

    <div class="logo">
        <slot name="logo" />
    </div>
    <blockquote class="astro-container container">
        <p class="head-md"><slot name="quote" /></p>
        <cite class="head-md"><slot name="cite" /></cite>
    </blockquote>
</Section>

<style>
.quote {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    color: var(--color, var(--color-dusk));
    padding-top: calc(var(--size-1000) * var(--pad, 1));
    padding-bottom: calc(var(--size-1000) * var(--pad, 1));
    z-index: 0;
}

blockquote {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    font-weight: bold;
    padding: 4rem 2rem;
    font-size: inherit;
    margin: 0 auto;
    max-width: 85ch;
}
cite {
    margin-top: 2rem;
    font-style: normal;
    font-size: var(--size-600);
}
.logo > :global(a) {
    padding: 1rem;
    display: inline-flex;
    color: inherit;
}
.glow {
    pointer-events: none;
    position: absolute;
    --size: 256px;
    width: calc(var(--size) * 3);
    border-radius: 50%;
    opacity: 0.25;
    mix-blend-mode: hard-light;
    height: var(--size);
    background: var(--blob-color, var(--gradient-pop-4));
    filter: blur(128px);
    transform: translate3d(0, 0, 0);
    z-index: -1;
}
.glow::before,
.glow::after {
    content: "";
    display: block;
    position: absolute;
    --size: 12rem;
    width: var(--size);
    height: var(--size);
    border-radius: 50%;
    background: var(--blob-color, var(--gradient-pop-4));
}

@media (min-width: 64rem) {
    blockquote {
        padding: 0 8rem;
    }
}
</style>
