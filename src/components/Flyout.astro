---
import { Sprite } from 'astro-icon';

export interface Props {
    title?: string;
    items: {
        link: App.Link;
        description?: string;
    }[];
}

const { title, items } = Astro.props as Props;

const hasDescriptions = items.some(({ description }) => !!description);
---

<details open="open">
    <summary>
        {title}
        <Sprite pack="heroicons-solid" name="chevron-down" size="1.25rem" />
    </summary>

    <div>
        {items.map(({ link, description }) => (
            <a href={link.href} alt={link.text}>
                <h4>{link.text}</h4>
                {description && (
                    <p>{description}</p>
                )}
            </a>
        ))}
    </div>
</details>

<style>
    details {
        position: relative;
    }

    summary {
        list-style: none;
        display: flex;
        align-items: center;
        font-family: var(--font-display);
        font-size: var(--size-500);
        color: var(--color-dusk);
    }

    summary::webkit-details-marker {
        display: none;
    }

    summary :global(svg) {
        opacity: 0.5;
        margin-left: 0.125rem;
        will-change: transform;
        transition: transform 200ms ease;
    }

    details:hover summary :global(svg) {
        transform: rotate(180deg);
    }

    div {
        display: none;
        position: absolute;
        top: 100%;
        left: 50%;
        max-width: 20rem;
        padding: 2rem;
        width: 100vw;
        background: white;
        box-shadow: var(--shadow-sm);
        border-radius: 0.5rem;
        transform: translate(-50%);
    }

    details:hover div {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    a, a:hover {
        color: var(--color-midnight);
    }

    a h4 {
        font-size: var(--size-500);
        font-family: var(--font-body);
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    a p {
        font-size: var(--size-400);
        opacity: 0.75;
    }
</style>