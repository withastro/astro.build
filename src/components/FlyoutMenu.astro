---
import { Sprite } from 'astro-icon';
import clsx from 'clsx';

export interface Props {
    title?: string;
    items: {
        link: App.Link;
        description?: string;
    }[];
}

const { title, items } = Astro.props as Props;

const hasDescriptions = items.some(({ description }) => !!description);
---

<flyout-menu class="relative block">
  <button type="button" class="flex items-center font-display" aria-expanded="false">
    {title}
    <Sprite pack="heroicons-solid" name="chevron-down" class="chevron h-5 w-5 opacity-50 transition transition-transform duration-200 ease" />
  </button>

  <section aria-hidden="true" class={clsx("absolute z-10 top-full left-1/2 transform -translate-x-1/2 mt-3 px-2 max-w-xs sm:px-0 pointer-events-none opacity-0 -translate-y-2 transition duration-200 ease", hasDescriptions ? "w-screen" : "text-center whitespace-nowrap")}>
    <div class="rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden">
      <div class="relative flex flex-col gap-6 font-normal font-body bg-white px-5 py-6 sm:gap-8 sm:p-8">
        {items.map(({ link, description }) => (
            <a href={link.href} class="-m-3 p-3 block rounded-md hover:bg-gray-50 transition ease-in-out duration-150">
                <p class="text-base font-medium text-gray-900">{link.text}</p>
                {description && (
                    <p class="mt-1 text-sm text-gray-500">{description}</p>
                )}
            </a>
        ))}
      </div>
    </div>
  </section>
</flyout-menu>

<style>
    section[aria-hidden="false"] {
        @apply opacity-100 translate-y-0 pointer-events-auto;
    }

    flyout-menu[open] .chevron {
        @apply rotate-180;
    }
</style>

<script type="module" hoist>
    import './FlyoutMenu.ts';
</script>