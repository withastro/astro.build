---
import Picture from '../Picture.astro'
import { showcaseImage } from '../../data/images.js'

export interface Props {
    site: App.ShowcaseSite;
}

const { site } = Astro.props as Props;

const image = await showcaseImage(site.image.src);

const widths = site.highlight ? [453, 906, image.width] : [453, 906]
const sizes = site.highlight ? '(min-width: 1024px) 67vw, 100vw' : '(max-width: 640px) 50vw, (max-width: 1024px) 33vw, 100vw)'
---

<article class:list={["relative flex flex-col rounded-lg overflow-hidden shadow-md bg-white aspect-w-16 aspect-h-9", site.highlight && "sm:col-span-2 sm:row-span-2"]}>
    <a {...site.url} alt={site.title} rel="noopener">
        <span class="sr-only">{site.title}</span>

        <Picture src={image} widths={widths} sizes={sizes} alt={site.title} />
    </a>

    <footer class="pointer-events-none absolute z-10 py-4 rounded-b-lg overflow-hidden bg-black text-center text-white font-normal h-fit inset-x-0 top-full -translate-y-full opacity-0 transition-opacity duration-300 ease-out">
        <p>{site.title}</p>
        <small {...site.url} class="underline font-light">{site.url.href}</small>
    </footer>
</article>

<style>
    article :global(picture) {
        @apply w-full h-full;
    }

    article :global(img) {
        @apply w-full h-full object-cover rounded-lg overflow-hidden;
    }

    article :global(picture::after) {
        @apply absolute inset-0 bg-black rounded-lg overflow-hidden opacity-0 transition-opacity duration-150 ease-out;
        content: "";
    }

    article:hover :global(picture::after), a:focus :global(picture::after) {
        @apply opacity-40;
    }

    article:hover footer, a:focus + footer {
        @apply opacity-100;
    }
</style>
