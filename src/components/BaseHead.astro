---
import { getImage } from '@astrojs/image'
import SEO from 'simple-astro-seo'
import smartypants from 'smartypants'
import site from '../data/site.js'

export interface Props {
    title?: string
    description?: string
    image?: string | ImageMetadata
    canonicalURL?: URL | null
    pageType?: 'website' | 'article'
}

const {
    description = site.description,
    image = site.image,
    canonicalURL = new URL(Astro.request.url, Astro.site),
    pageType = 'website'
} = Astro.props as Props

const ensureTrailingSlash = (url: string) => url.replace(/\/$/, '') + '/';
const resolvedImage = await getImage({ src: image, width: 1200, aspectRatio: 2, format: 'jpeg' });
const resolvedImageWithDomain = new URL(resolvedImage.src, Astro.url).toString();
const title = Astro.props.title ? [Astro.props.title, site.title].join(' | ') : 'Astro | Build faster websites'
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="generator" content={Astro.generator} />
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#8D46E7">
<link rel="icon" type="image/svg+xml" href="/favicon.svg">
<link rel="mask-icon" href="/favicon.svg" color="#8D46E7">
<link rel="sitemap" href="/sitemap-index.xml">
<link rel="alternate" type="application/rss+xml" href="/rss.xml" title="RSS" />
{site.socialLinks.filter((link) => !!link.me).map((link) => (
    <link rel="me" href={link.me || link.href} />
))}

<title set:html={smartypants(title, 1)}></title>

<SEO
    siteName={site.title}
    {title}
    {description}
    image={resolvedImageWithDomain}
    twitterHandle={site.twitterHandle}
    pageType={pageType}
    url={canonicalURL && ensureTrailingSlash(canonicalURL.toString())}
/>

<!-- Fathom - beautiful, simple website analytics -->
<script src="https://certain-quality.astro.build/script.js" data-site="EZBHTSIG" defer></script>
