---
import { parse, isBefore } from 'date-fns';
import Layout from '../../layouts/Page.astro';
import Card from '../../components/blog/Card.astro';
import Panel from '../../components/Panel.astro';

const posts = Astro.fetchContent('./*.md')
    .map(({ title, description, authors, publishDate, url }) => ({
        title,
        description,
        authors,
        publishDate:  parse(publishDate, "MMMM d, yyyy", new Date()),
        href: url
    }))
    .sort((a, b) => {
        if (isBefore(a.publishDate, b.publishDate)) return 1;
        if (isBefore(b.publishDate, a.publishDate)) return -1;
        return 0;
    });

const meta = { title: 'Blog' };
---

<Layout meta={meta}>
    <header>
        <h1 class="title text-gradient">Blog</h1>
        <p></p>
    </header>

    <ul role="list" class="posts">
        {posts.map(post => {
            return (
                <li>
                    <Panel size="md" elevation="sm" background="var(--color-white)">
                        <Card post={post} variant="summary" />
                    </Panel>
                    <a class="overlay" href={post.href} alt="Read more">
                        <span class="sr-only visually-hidden">Read more</span>
                    </a>
                </li>
            )
        })}
    </ul>
</Layout>

<style>
    header {
        padding: 3rem 2rem 2rem;
        width: 100%;
        max-width: 64rem;
        flex-grow: 1;
    }
    h1.title {
        font-family: var(--font-display);
        --fill: var(--gradient-pop-1);
        font-size: var(--size-900);
    }
    .posts {
        width: 100%;
        max-width: 64rem;
        padding-bottom: 4rem;
        gap: 1rem;
        display: flex;
        flex-flow: column nowrap;
        font-family: var(--font-body);
        font-size: var(--size-500);
        line-height: 1.3;
        color: var(--color-midnight);
        list-style: none;
    }
    li {
        position: relative;
        margin: 0 -.5rem;
        cursor: pointer;
    }
    .post + .post {
        margin-top: 1rem;
    }
    .post {
        position: relative;
        display: flex;
        flex-flow: row wrap;
        background: var(--color-white);
        box-shadow: var(--shadow-sm);
        border-radius: var(--corner-md);
        font-family: var(--font-body);
        font-size: var(--size-500);
        line-height: 1.3;
        color: var(--color-midnight);
    }
    :is(li:hover, li:focus-within) :global(.title) {
        --fill: var(--gradient-pop-1);
    }
    .overlay {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: block;
        z-index: 1;
    }
</style>
