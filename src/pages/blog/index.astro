---
import { parse, isBefore } from 'date-fns';
import Layout from '../../layouts/Page.astro';
import Card from '../../components/blog/Card.astro';
import Panel from '../../components/Panel.astro';

const posts = await Astro.glob('./*.md')
    .then(posts => posts
        .map(({ frontmatter, url }) => ({
            title: frontmatter.title,
            description: frontmatter.description,
            authors: frontmatter.authors,
            publishDate:  parse(frontmatter.publishDate, "MMMM d, yyyy", new Date()),
            href: url
        }))
        .sort((a, b) => {
            if (isBefore(a.publishDate, b.publishDate)) return 1;
            if (isBefore(b.publishDate, a.publishDate)) return -1;
            return 0;
        })
    );

const meta = { title: 'Blog' };
---

<Layout meta={meta}>
    <header>
        <h1 class="title text-gradient">Blog</h1>
        <p></p>
    </header>

    <ul role="list" class="posts">
        {posts.map(post => {
            return (
                <li>
                    <a class="overlay" href={post.href}>
                        <span class="sr-only visually-hidden">{post.title}</span>
                    </a>
                    <Panel size="md" elevation="sm" container={false} background="var(--color-white)">
                        <Card post={post} variant="summary" />
                    </Panel>
                </li>
            )
        })}
    </ul>
</Layout>

<style>
    header {
        padding: 3rem 2rem 2rem;
        width: 100%;
        max-width: 64rem;
        flex-grow: 1;
    }
    h1.title {
        font-family: var(--font-display);
        --fill: var(--gradient-pop-1);
        font-size: var(--size-900);
    }
    .posts {
        width: 100%;
        max-width: 64rem;
        gap: 1rem;
        display: flex;
        flex-flow: column nowrap;
        font-family: var(--font-body);
        font-size: var(--size-500);
        line-height: 1.3;
        color: var(--color-midnight);
        list-style: none;
    }
    li {
        position: relative;
        cursor: pointer;
    }
    :is(li:hover, li:focus-within) :global(.title) {
        --fill: var(--gradient-pop-1);
    }
    .overlay {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        display: block;
        z-index: 1;
        /* Border only visible for high contrast users */
        border: 1px solid transparent;
    }

    li :global(a:not(.overlay)) {
        z-index: 2;
    }
</style>
