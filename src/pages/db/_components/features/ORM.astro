---

---

<div
  id='typing-effect'
  class='mx-auto flex w-full h-40 items-start justify-start gap-2 p-2'
>
  <div class='mt-2 w-[48px] whitespace-nowrap text-astro-gray-100'>
    <p id='animate-typing-effect' class='animated-text'>User.</p>
  </div>

  <div
    id='intellisense-container'
    class='group hidden w-full space-y-1 rounded-lg bg-[#111520] border border-[#4B4B4B]/10 p-1'
  >
    <button
      type='button'
      class='flex w-full items-center justify-between gap-3 whitespace-nowrap rounded-lg px-3 py-2 text-astro-gray-300 hover:bg-gradient-to-r hover:from-white/5 hover:to-transparent'
    >
      <div class='flex items-center gap-2'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='20'
          height='20'
          viewBox='0 0 24 24'
          ><path
            fill='currentColor'
            d='m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11zM5.494 7.078L12 10.844l6.506-3.766L12 3.31zM4.5 8.813v7.534L11 20.11v-7.533zM13 20.11l6.5-3.763V8.813L13 12.576z'
          ></path></svg
        >
        <span>id</span>
      </div>

      <div><span class='text-astro-gray-400'>integer</span></div>
    </button>

    <button
      type='button'
      class='flex w-full items-center justify-between gap-3 whitespace-nowrap rounded-lg px-3 py-2 text-astro-gray-300 hover:bg-gradient-to-r hover:from-white/5 hover:to-transparent'
    >
      <div class='flex items-center gap-2'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='20'
          height='20'
          viewBox='0 0 24 24'
          ><path
            fill='currentColor'
            d='m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11zM5.494 7.078L12 10.844l6.506-3.766L12 3.31zM4.5 8.813v7.534L11 20.11v-7.533zM13 20.11l6.5-3.763V8.813L13 12.576z'
          ></path></svg
        >
        <span>name</span>
      </div>

      <div><span class='text-astro-gray-400'>string</span></div>
    </button>

    <button
      type='button'
      class='flex w-full items-center justify-between gap-3 whitespace-nowrap rounded-lg px-3 py-2 text-astro-gray-300 hover:bg-gradient-to-r hover:from-white/5 hover:to-transparent'
    >
      <div class='flex items-center gap-2'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          width='20'
          height='20'
          viewBox='0 0 24 24'
          ><path
            fill='currentColor'
            d='m12 1l9.5 5.5v11L12 23l-9.5-5.5v-11zM5.494 7.078L12 10.844l6.506-3.766L12 3.31zM4.5 8.813v7.534L11 20.11v-7.533zM13 20.11l6.5-3.763V8.813L13 12.576z'
          ></path></svg
        >
        <span>org</span>
      </div>

      <div><span class='text-astro-gray-400'>string</span></div>
    </button>
  </div>
</div>

<style>
  #typing-effect .animated-text {
    width: 2em;
    overflow: hidden;
    border-right: 2px solid rgba(255, 255, 255, 0.75);
  }

  #animate-typing-effect {
    animation:
      typewriter 1500ms steps(15) 50ms 1 normal both,
      blinkTextCursor 750ms steps(15) infinite normal;
      animation-play-state: paused;
  }
  @keyframes typewriter {
    from {
      width: 0;
    }
    to {
      width: 2.5em;
    }
  }
  @keyframes blinkTextCursor {
    from {
      border-right-color: rgba(255, 255, 255, 0.75);
    }
    to {
      border-right-color: transparent;
    }
  }

  #intellisense-container {
    opacity: 0;
    animation: fadeInAnimation 1s ease-out 10ms forwards;
  }

  @keyframes fadeInAnimation {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>

<script>
  const mainContainer = document.getElementById("animate-typing-effect") as HTMLDivElement
  const intellisenseContainer = document.getElementById("intellisense-container") as HTMLDivElement

  const observer = new IntersectionObserver((entries) => {
      const intersecting = entries[0].isIntersecting

      if (intersecting) {
        mainContainer.style.animationPlayState = "running"
      }
    },
  )

  observer.observe(mainContainer)

  mainContainer.addEventListener("animationend", () => {
    intellisenseContainer.classList.remove("hidden")
    observer.unobserve(mainContainer)
  })
</script>
