---
import { Sprite } from 'astro-icon'
import Layout from './Base.astro'
import type { Props as LayoutProps } from './Base.astro'
import Aside from '../components/Aside.astro'
import PageTitle from '../components/PageTitle.astro'
import PillList from '../components/PillList.astro'
import Search from '../components/Search.astro'
import { Link } from '../types.js'
import MaxWidth from '../components/MaxWidth.astro'

interface Props extends LayoutProps {
    collections: { slug: string; link: Link }[]
    current: string
    searchable?: boolean
    searchLabel?: string
}

const {
    collections,
    current,
    searchable = true,
    searchLabel = 'Search',
    ...layout
} = Astro.props as Props

const currentCollection = collections.find(({ slug }) => slug === current)
---

<Layout {...layout}>
    <PageTitle>
        <Fragment slot="title">{layout.title}</Fragment>

        <slot name="description"
            ><Fragment>{layout.description}</Fragment>
        </slot>
    </PageTitle>

    <div class="pt-12 pb-16">
    {Astro.slots.info && (
        <Aside class="mb-8 text-sm shadow-md">
            <p class="text-justify">
                <Sprite
                    pack="heroicons-outline"
                    name="information-circle"
                    size="1.5em"
                    class="inline-block"
                    aria-hidden="true"
                />
                <slot name="info" />
            </p>
        </Aside>
    )}

    {(searchable || collections.length > 1) && (
        <MaxWidth
            as="header"
            id="collections"
            class="flex flex-col items-center justify-between gap-4 md:flex-row md:items-end"
        >
            {collections.length > 1 && (
                <PillList
                    title="collections"
                    links={collections.map(({ link }) => link)}
                    current={currentCollection.link}
                    prefetch
                />
            )}

            {searchable && (
                <Search
                    id="catalogsearch"
                    selector="#catalog li"
                    groupSelector="#catalog > section"
                    placeholder={searchLabel}
                />
            )}
        </MaxWidth>
    )}

    <MaxWidth
        as="section"
        id="catalog"
        class="flex flex-col pt-4 gap-y-12 mt-0 lg:gap-y-16 sm:pt-6 lg:pt-8"
    >
        <slot name="cards" />
    </MaxWidth>
    </div>
</Layout>
