---
import { Sprite } from 'astro-icon';
import Layout from './Content.astro';
import Aside from '../components/Aside.astro';
import Footer from '../components/Footer.astro';
import Nav from '../components/Nav.astro';
import PillList from '../components/PillList.astro';
import Search from '../components/Search.astro';
import CardsBlock from '../components/blocks/CardsBlock.astro';
import TitleBlock from '../components/blocks/TitleBlock.astro';
import type { Props as BaseHeadProps } from '../components/BaseHead.astro';

export interface Props {
    meta: BaseHeadProps;
    collections: { text: string; slug: string }[];
    current?: string;
    baseHref: string;
    searchable?: boolean;
}

const { meta, collections, current = 'all', baseHref, searchable = true } = Astro.props as Props;

const collectionLinks: App.Link[] = [
    {
        text: 'all',
        href: `${baseHref}/`
    },
    ...collections.map(({ text, slug }) => ({
        text,
        href: `${baseHref}/${slug}/`
    }))
];

const currentCollection = collectionLinks.find(({ text }) => text === current);
---

<Layout meta={meta}>
    <Nav slot="nav" />

    <TitleBlock>
        <Fragment slot="title">{meta.title}</Fragment>

        <slot name="description"><p>{meta.description}</p></slot>
    </TitleBlock>

    <header class="flex flex-col gap-4 mb-4 md:flex-row items-center justify-between md:items-end">
        <PillList title="collections" links={collectionLinks} current={currentCollection} />

        {searchable && (
            <Search id="catalogsearch" selector="#catalog > *" placeholder="Search" />
        )}
    </header>
    
    {Astro.slots.info && (
        <Aside class="mb-4 text-sm">
        <p class="text-justify">
            <Sprite pack="heroicons-outline" name="information-circle" size="1.5em" class="inline-block" />
            <slot name='info' />
        </p>
    </Aside>
    )}

    <CardsBlock id="catalog">
        <slot name="cards" />
    </CardsBlock>

    <Footer slot="footer" />
</Layout>
