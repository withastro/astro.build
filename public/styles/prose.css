.prose {
    max-width: 48rem;
    display: flex;
    flex-flow: column nowrap;
    font-family: var(--font-body);
    font-size: var(--size-500);
    line-height: 1.3;
    color: var(--color-midnight);
    padding-bottom: 2rem;
    z-index: 1;
}
:where(.prose > * + *) {
    margin-top: 1em;
}
.prose :is(h1, h2, h3, h4, h5, h6) {
    font-family: var(--font-display);
    line-height: 1.1;
    margin-bottom: 1.25rem;
    color: var(--color-dusk);
}
.prose hr {
    border: 0;
    border-top: 1px solid var(--color-dawn);
    margin-left: -2rem;
    margin-right: -2rem;
    margin-top: 1rem;
    margin-bottom: 2rem;
}
.prose h1 {
    --fill: var(--gradient-pop-1);
    font-size: 3rem;
    font-size: var(--size-800);
}
.prose h2 {
    font-size: 2rem;
    font-size: var(--size-600);
    margin-top: 2em;
    margin-bottom: -0.25em;
}
.prose :is(h2):not([class]) {
    margin-top: 3em;
}
.prose > .note:last-child {
    margin-top: 8rem;
}
.prose code {
    font-family: var(--font-mono);
    font-weight: 400;
    white-space: pre-wrap;
    word-break: break-word;
}
.prose code:not([class]) {
    font-size: 0.85em;
    color: var(--color-purple);
}
.prose code:not([class])::before {
    content: "`";
}
.prose code:not([class])::after {
    content: "`";
}
.prose img {
    max-width: 100%;
}
.prose :is(h2, h3, h4, h5, h6) a {
    font: inherit;
    color: inherit;
    text-decoration: none !important;
    display: flex;
}

.prose :is(h2, h3, h4, h5, h6) a::before {
    content: "#";
    width: 1em;
    margin-left: 0.25em;
    color: inherit;
    opacity: 0;
    transition: opacity 200ms cubic-bezier(0.23, 1, 0.32, 1);
    order: 999;
}

.prose :is(h2, h3, h4, h5, h6) a:is(:active, :visited, :hover, :focus) {
    color: var(--color-dusk);
}

.prose :is(h2, h3, h4, h5, h6) a:active::before,
.prose :is(h2, h3, h4, h5, h6) a:hover::before,
.prose :is(h2, h3, h4, h5, h6) a:focus::before {
    opacity: 0.6 !important;
}

.prose :is(strong, b) {
    font-family: inherit;
    font-weight: 600;
}

.prose :is(em, i) {
    font-weight: 400;
    font-style: normal;
}

.prose :is(ul:not([role="list"]), ol:not([role="list"])) {
    padding-left: 1.5em;
}

.prose :where(ul:not([role="list"])) {
    list-style-type: square;
}

.prose :where(ul:not([role="list"]) > li + li) {
    margin-top: 0.25em;
}

.prose ::marker {
    color: rgba(var(--color-midnight-rgb), 0.5);
}

.prose pre > code:not([class*="language"]) {
    background-color: transparent;
    padding: 0;
    margin: 0;
    border-radius: 0;
    color: inherit;
}

.prose pre > code {
    font-size: 1em;
}

.prose pre {
    position: relative;
    --padding-block: 1rem;
    --padding-inline: 2rem;
    padding: var(--padding-block) var(--padding-inline);
    padding-right: calc(var(--padding-inline) * 2);
    margin-left: calc(var(--padding-inline) * -1);
    margin-right: calc(var(--padding-inline) * -1);
    font-family: var(--font-mono);

    line-height: 1.5;
    font-size: 0.85em;
    overflow-y: hidden;
    overflow-x: auto;
}

.prose pre {
    background: linear-gradient(to bottom, var(--color-midnight), #1f1638);
    color: white;
}

.prose table {
    width: 100%;
    padding: var(--padding-block) 0;
    margin: 0;
    border-collapse: collapse;
}

/* Zebra striping */
.prose tr:nth-of-type(odd) {
    background: var(--theme-bg-hover);
}
.prose th {
    background: var(--color-black);
    color: var(--theme-color);
    font-weight: bold;
}
.prose td,
.prose th {
    padding: 6px;
    text-align: left;
}